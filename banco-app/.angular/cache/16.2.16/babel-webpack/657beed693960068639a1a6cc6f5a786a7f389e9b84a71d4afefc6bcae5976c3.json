{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CuentaService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/cuentas'; // Ajusta según la URL de tu API\n  }\n\n  getSaldo(cuentaId) {\n    return this.http.get(`${this.apiUrl}/${cuentaId}/saldo`);\n  }\n  depositar(cuentaId, monto) {\n    return this.http.post(`${this.apiUrl}/${cuentaId}/depositar`, {\n      monto\n    });\n  }\n  retirar(cuentaId, monto) {\n    return this.http.post(`${this.apiUrl}/${cuentaId}/retirar`, {\n      monto\n    });\n  }\n  getTransacciones(cuentaId) {\n    return this.http.get(`${this.apiUrl}/${cuentaId}/transacciones`);\n  }\n  static {\n    this.ɵfac = function CuentaService_Factory(t) {\n      return new (t || CuentaService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CuentaService,\n      factory: CuentaService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CuentaService","constructor","http","apiUrl","getSaldo","cuentaId","get","depositar","monto","post","retirar","getTransacciones","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\services\\cuenta.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CuentaService {\n  private apiUrl = 'http://localhost:8080/api/cuentas'; // Ajusta según la URL de tu API\n\n  constructor(private http: HttpClient) { }\n\n  getSaldo(cuentaId: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/${cuentaId}/saldo`);\n  }\n\n  depositar(cuentaId: number, monto: number): Observable<any> {\n    return this.http.post(`${this.apiUrl}/${cuentaId}/depositar`, { \n      monto \n\n     });\n  }\n\n  retirar(cuentaId: number, monto: number): Observable<any> {\n    return this.http.post(`${this.apiUrl}/${cuentaId}/retirar`, { \n      monto\n     });\n  }\n\n  getTransacciones(cuentaId: number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/${cuentaId}/transacciones`);\n  }\n}"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,mCAAmC,CAAC,CAAC;EAEd;;EAExCC,QAAQA,CAACC,QAAgB;IACvB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIE,QAAQ,QAAQ,CAAC;EAC/D;EAEAE,SAASA,CAACF,QAAgB,EAAEG,KAAa;IACvC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,IAAIE,QAAQ,YAAY,EAAE;MAC5DG;KAEA,CAAC;EACL;EAEAE,OAAOA,CAACL,QAAgB,EAAEG,KAAa;IACrC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,IAAIE,QAAQ,UAAU,EAAE;MAC1DG;KACA,CAAC;EACL;EAEAG,gBAAgBA,CAACN,QAAgB;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,IAAIE,QAAQ,gBAAgB,CAAC;EACzE;;;uBAxBWL,aAAa,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbf,aAAa;MAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}