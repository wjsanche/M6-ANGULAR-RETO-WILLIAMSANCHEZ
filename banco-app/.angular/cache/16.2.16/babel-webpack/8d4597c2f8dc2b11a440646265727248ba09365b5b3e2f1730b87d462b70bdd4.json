{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cuenta.service\";\nexport class CuentaComponent {\n  constructor(cuentaService) {\n    this.cuentaService = cuentaService;\n    this.cuentaId = 0; // \n    this.saldo = 0;\n    this.monto = 0;\n    this.mensaje = '';\n    this.cuentaIdTransacciones = 0; // Para buscar transacciones\n    this.transacciones = [];\n  }\n  obtenerSaldo() {\n    if (!this.cuentaId || this.cuentaId <= 0) {\n      this.mensaje = 'Ingrese un ID de cuenta v√°lido.';\n      return;\n    }\n    this.cuentaService.getSaldo(this.cuentaId).subscribe({\n      next: response => {\n        this.saldo = response.saldo;\n        // ‚úÖ Mostrar mensaje SOLO si no hay otro mensaje activo\n        if (!this.mensaje) {\n          this.mensaje = 'Saldo obtenido correctamente';\n          // üîπ Limpiar mensaje despu√©s de 2 segundos\n          setTimeout(() => {\n            if (this.mensaje === 'Saldo obtenido correctamente') {\n              this.mensaje = '';\n            }\n          }, 2000);\n        }\n      },\n      error: error => {\n        console.error('Error al obtener saldo:', error);\n        this.mensaje = 'Error al consultar saldo. Verifique el ID de la cuenta.';\n      }\n    });\n  }\n  depositar() {\n    if (this.monto <= 0) {\n      this.mensaje = 'El monto debe ser mayor a 0';\n      return;\n    }\n    this.cuentaService.depositar(this.cuentaId, this.monto).subscribe(response => {\n      this.mensaje = response.mensaje || 'Deposito realizado con √©xito';\n      // ‚úÖ Primero mostramos el mensaje del retiro\n      setTimeout(() => {\n        this.mensaje = '';\n        // ‚úÖ Luego consultamos el saldo SIN modificar el mensaje\n        this.obtenerSaldo();\n      }, 2000);\n    }, error => {\n      console.error(\"Error en el deposito:\", error); // üîπ Verifica si hay errores en consola\n      this.mensaje = error.error?.mensaje || 'Error al realizar el deposito';\n    });\n  }\n  retirar() {\n    if (this.monto <= 0) {\n      this.mensaje = 'El monto debe ser mayor a 0';\n      return;\n    }\n    this.cuentaService.retirar(this.cuentaId, this.monto).subscribe(response => {\n      this.mensaje = response.mensaje || 'Retiro realizado con √©xito';\n      // ‚úÖ Primero mostramos el mensaje del retiro\n      setTimeout(() => {\n        this.mensaje = '';\n        // ‚úÖ Luego consultamos el saldo SIN modificar el mensaje\n        this.obtenerSaldo();\n      }, 2000);\n    }, error => {\n      console.error(\"Error en el retiro:\", error); // üîπ Verifica si hay errores en consola\n      this.mensaje = error.error?.mensaje || 'Error al realizar el retiro';\n    });\n  }\n  buscarTransacciones() {\n    if (!this.cuentaIdTransacciones) {\n      this.mensaje = 'Debe ingresar un ID de cuenta para buscar transacciones';\n      return;\n    }\n    this.cuentaService.getTransacciones(this.cuentaIdTransacciones).subscribe(response => {\n      console.log('Transacciones recibidas:', response); // Para depuraci√≥n\n      this.transacciones = Array.isArray(response) ? response : []; // Asegura que sea un array\n      this.mensaje = this.transacciones.length > 0 ? `Se encontraron ${this.transacciones.length} transacciones` : 'No hay transacciones para esta cuenta';\n    }, error => {\n      console.error('Error al obtener transacciones:', error); // Para depuraci√≥n\n      this.mensaje = 'Error al obtener transacciones';\n      this.transacciones = [];\n    });\n  }\n  limpiarBusqueda() {\n    this.cuentaIdTransacciones = 0; // Borra el ID ingresado\n    this.transacciones = []; // Vac√≠a la lista de transacciones\n    this.mensaje = ''; // Borra el mensaje de estado\n  }\n\n  static {\n    this.…µfac = function CuentaComponent_Factory(t) {\n      return new (t || CuentaComponent)(i0.…µ…µdirectiveInject(i1.CuentaService));\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: CuentaComponent,\n      selectors: [[\"app-cuenta\"]],\n      decls: 7,\n      vars: 0,\n      consts: [[1, \"container\"], [1, \"bank-header\", \"text-center\"], [\"src\", \"assets/logo.png\", \"alt\", \"Logo del Banco\", 2, \"height\", \"50px\", \"margin-right\", \"15px\"], [1, \"bank-name\"], [1, \"bank-slogan\"]],\n      template: function CuentaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.…µ…µelement(2, \"img\", 2);\n          i0.…µ…µelementStart(3, \"h1\", 3);\n          i0.…µ…µtext(4, \"MiApp\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(5, \"p\", 4);\n          i0.…µ…µtext(6, \"El Mejor Banco del Pa\\u00EDs\");\n          i0.…µ…µelementEnd()()();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CuentaComponent","constructor","cuentaService","cuentaId","saldo","monto","mensaje","cuentaIdTransacciones","transacciones","obtenerSaldo","getSaldo","subscribe","next","response","setTimeout","error","console","depositar","retirar","buscarTransacciones","getTransacciones","log","Array","isArray","length","limpiarBusqueda","i0","…µ…µdirectiveInject","i1","CuentaService","selectors","decls","vars","consts","template","CuentaComponent_Template","rf","ctx","…µ…µelementStart","…µ…µelement","…µ…µtext","…µ…µelementEnd"],"sources":["C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\cuenta\\cuenta.component.ts","C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\cuenta\\cuenta.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CuentaService } from 'src/app/services/cuenta.service';\n\n@Component({\n  selector: 'app-cuenta',\n  templateUrl: './cuenta.component.html',\n  styleUrls: ['./cuenta.component.css']\n})\nexport class CuentaComponent {\n  cuentaId: number = 0; // \n  saldo: number = 0;\n  monto: number = 0;\n  mensaje: string = '';\n  cuentaIdTransacciones: number = 0; // Para buscar transacciones\n\n  constructor(private cuentaService: CuentaService) {}\n\n  obtenerSaldo() {\n    if (!this.cuentaId || this.cuentaId <= 0) {\n      this.mensaje = 'Ingrese un ID de cuenta v√°lido.';\n      return;\n    }\n  \n    this.cuentaService.getSaldo(this.cuentaId).subscribe({\n      next: (response) => {\n        this.saldo = response.saldo;\n      // ‚úÖ Mostrar mensaje SOLO si no hay otro mensaje activo\n      if (!this.mensaje) {\n        this.mensaje = 'Saldo obtenido correctamente';\n        \n        // üîπ Limpiar mensaje despu√©s de 2 segundos\n        setTimeout(() => {\n          if (this.mensaje === 'Saldo obtenido correctamente') {\n            this.mensaje = '';\n          }\n        }, 2000);\n      }\n      },\n      error: (error) => {\n        console.error('Error al obtener saldo:', error);\n        this.mensaje = 'Error al consultar saldo. Verifique el ID de la cuenta.';\n      }\n    });\n  }\n\n  depositar() {\n    if (this.monto <= 0) {\n      this.mensaje = 'El monto debe ser mayor a 0';\n      return;\n    }\n  \n    this.cuentaService.depositar(this.cuentaId, this.monto).subscribe(\n      (response) => {\n        this.mensaje = response.mensaje || 'Deposito realizado con √©xito';\n\n        // ‚úÖ Primero mostramos el mensaje del retiro\n        setTimeout(() => {\n          this.mensaje = '';\n          // ‚úÖ Luego consultamos el saldo SIN modificar el mensaje\n          this.obtenerSaldo();\n        }, 2000);\n      },\n      (error) => {\n        console.error(\"Error en el deposito:\", error); // üîπ Verifica si hay errores en consola\n        this.mensaje = error.error?.mensaje || 'Error al realizar el deposito';\n      }\n    );\n  }\n  \n\n  retirar() {\n    if (this.monto <= 0) {\n      this.mensaje = 'El monto debe ser mayor a 0';\n      return;\n    }\n  \n    this.cuentaService.retirar(this.cuentaId, this.monto).subscribe(\n      (response) => {\n        this.mensaje = response.mensaje || 'Retiro realizado con √©xito';\n\n        // ‚úÖ Primero mostramos el mensaje del retiro\n        setTimeout(() => {\n          this.mensaje = '';\n          // ‚úÖ Luego consultamos el saldo SIN modificar el mensaje\n          this.obtenerSaldo();\n        }, 2000);\n      },\n      (error) => {\n        console.error(\"Error en el retiro:\", error); // üîπ Verifica si hay errores en consola\n        this.mensaje = error.error?.mensaje || 'Error al realizar el retiro';\n      }\n    );\n  }\n  transacciones: any[] = [];\n\n  buscarTransacciones() {\n    if (!this.cuentaIdTransacciones) {\n      this.mensaje = 'Debe ingresar un ID de cuenta para buscar transacciones';\n      return;\n    }\n  \n    this.cuentaService.getTransacciones(this.cuentaIdTransacciones).subscribe(\n      (response) => {\n        console.log('Transacciones recibidas:', response); // Para depuraci√≥n\n        this.transacciones = Array.isArray(response) ? response : []; // Asegura que sea un array\n        this.mensaje = this.transacciones.length > 0 \n          ? `Se encontraron ${this.transacciones.length} transacciones`\n          : 'No hay transacciones para esta cuenta';\n      },\n      (error) => {\n        console.error('Error al obtener transacciones:', error); // Para depuraci√≥n\n        this.mensaje = 'Error al obtener transacciones';\n        this.transacciones = [];\n      }\n    );\n  }\n\n  limpiarBusqueda() {\n    this.cuentaIdTransacciones = 0; // Borra el ID ingresado\n    this.transacciones = []; // Vac√≠a la lista de transacciones\n    this.mensaje = ''; // Borra el mensaje de estado\n  }\n}\n","<div class=\"container\">\n  <div class=\"bank-header text-center\">\n    <img src=\"assets/logo.png\" alt=\"Logo del Banco\" style=\"height: 50px; margin-right: 15px;\">\n    <h1 class=\"bank-name\">MiApp</h1>\n    <p class=\"bank-slogan\">El Mejor Banco del Pa√≠s</p>\n  </div>\n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}