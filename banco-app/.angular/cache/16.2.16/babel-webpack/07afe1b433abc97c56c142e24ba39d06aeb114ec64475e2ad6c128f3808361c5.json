{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CuentaService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/cuentas'; // Ajusta según la URL de tu API\n  }\n\n  getSaldo(cuentaId) {\n    return this.http.get(`${this.apiUrl}/${cuentaId}/saldo`);\n  }\n  depositar(cuentaId, monto) {\n    const depositoDTO = {\n      monto\n    };\n    return this.http.post(`${this.apiUrl}/${cuentaId}/depositar`, depositoDTO);\n  }\n  retirar(cuentaId, monto) {\n    const retiroDTO = {\n      monto\n    };\n    return this.http.post(`${this.apiUrl}/${cuentaId}/retirar`, retiroDTO);\n  }\n  getTransacciones(cuentaIdT) {\n    return this.http.get(`${this.apiUrl}/cuentas/${cuentaId}/transacciones`);\n  }\n  static {\n    this.ɵfac = function CuentaService_Factory(t) {\n      return new (t || CuentaService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CuentaService,\n      factory: CuentaService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CuentaService","constructor","http","apiUrl","getSaldo","cuentaId","get","depositar","monto","depositoDTO","post","retirar","retiroDTO","getTransacciones","cuentaIdT","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\services\\cuenta.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CuentaService {\n  private apiUrl = 'http://localhost:8080/api/cuentas'; // Ajusta según la URL de tu API\n\n  constructor(private http: HttpClient) { }\n\n  getSaldo(cuentaId: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/${cuentaId}/saldo`);\n  }\n\n  depositar(cuentaId: number, monto: number): Observable<any> {\n    const depositoDTO = { monto };\n    return this.http.post<any>(`${this.apiUrl}/${cuentaId}/depositar`, \n      depositoDTO);\n  }\n\n  retirar(cuentaId: number, monto: number): Observable<any> {\n    const retiroDTO = { monto };\n    return this.http.post<any>(`${this.apiUrl}/${cuentaId}/retirar`, \n      retiroDTO);\n  }\n\n  getTransacciones(cuentaIdT: number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/cuentas/${cuentaId}/transacciones`);\n  }\n}"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,mCAAmC,CAAC,CAAC;EAEd;;EAExCC,QAAQA,CAACC,QAAgB;IACvB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIE,QAAQ,QAAQ,CAAC;EAC/D;EAEAE,SAASA,CAACF,QAAgB,EAAEG,KAAa;IACvC,MAAMC,WAAW,GAAG;MAAED;IAAK,CAAE;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,MAAM,IAAIE,QAAQ,YAAY,EAC/DI,WAAW,CAAC;EAChB;EAEAE,OAAOA,CAACN,QAAgB,EAAEG,KAAa;IACrC,MAAMI,SAAS,GAAG;MAAEJ;IAAK,CAAE;IAC3B,OAAO,IAAI,CAACN,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,MAAM,IAAIE,QAAQ,UAAU,EAC7DO,SAAS,CAAC;EACd;EAEAC,gBAAgBA,CAACC,SAAiB;IAChC,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,YAAYE,QAAQ,gBAAgB,CAAC;EACjF;;;uBAvBWL,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAblB,aAAa;MAAAmB,OAAA,EAAbnB,aAAa,CAAAoB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}