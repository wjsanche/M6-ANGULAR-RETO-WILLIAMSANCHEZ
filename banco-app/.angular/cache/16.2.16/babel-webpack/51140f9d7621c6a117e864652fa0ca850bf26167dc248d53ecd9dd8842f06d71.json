{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cuenta.service\";\nimport * as i2 from \"@angular/common\";\nfunction TransaccionesComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaccion_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaccion_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaccion_r2.monto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaccion_r2.tipo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaccion_r2.fecha);\n  }\n}\nfunction TransaccionesComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Monto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Fecha\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, TransaccionesComponent_table_5_tr_12_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.transacciones);\n  }\n}\nexport class TransaccionesComponent {\n  constructor(cuentaService) {\n    this.cuentaService = cuentaService;\n    this.cuentaId = 1; // Puedes cambiarlo\n    this.transacciones = [];\n  }\n  obtenerTransacciones() {\n    this.cuentaService.getTransacciones(this.cuentaId).subscribe(data => {\n      this.transacciones = data;\n    }, error => {\n      console.error('Error al obtener transacciones', error);\n    });\n  }\n  static {\n    this.ɵfac = function TransaccionesComponent_Factory(t) {\n      return new (t || TransaccionesComponent)(i0.ɵɵdirectiveInject(i1.CuentaService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TransaccionesComponent,\n      selectors: [[\"app-transacciones\"]],\n      decls: 6,\n      vars: 1,\n      consts: [[1, \"container\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [\"class\", \"table mt-3\", 4, \"ngIf\"], [1, \"table\", \"mt-3\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function TransaccionesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Historial de Transacciones\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function TransaccionesComponent_Template_button_click_3_listener() {\n            return ctx.obtenerTransacciones();\n          });\n          i0.ɵɵtext(4, \"Ver Transacciones\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, TransaccionesComponent_table_5_Template, 13, 1, \"table\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.transacciones.length > 0);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","transaccion_r2","id","monto","tipo","fecha","ɵɵtemplate","TransaccionesComponent_table_5_tr_12_Template","ɵɵproperty","ctx_r0","transacciones","TransaccionesComponent","constructor","cuentaService","cuentaId","obtenerTransacciones","getTransacciones","subscribe","data","error","console","ɵɵdirectiveInject","i1","CuentaService","selectors","decls","vars","consts","template","TransaccionesComponent_Template","rf","ctx","ɵɵlistener","TransaccionesComponent_Template_button_click_3_listener","TransaccionesComponent_table_5_Template","length"],"sources":["C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\transacciones\\transacciones.component.ts","C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\transacciones\\transacciones.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CuentaService } from 'src/app/services/cuenta.service';\n\n@Component({\n  selector: 'app-transacciones',\n  templateUrl: './transacciones.component.html',\n  styleUrls: ['./transacciones.component.css']\n})\nexport class TransaccionesComponent {\n  cuentaId: number = 1; // Puedes cambiarlo\n  transacciones: any[] = [];\n\n  constructor(private cuentaService: CuentaService) {}\n\n  obtenerTransacciones() {\n    this.cuentaService.getTransacciones(this.cuentaId).subscribe(\n      (data) => {\n        this.transacciones = data;\n      },\n      (error) => {\n        console.error('Error al obtener transacciones', error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h2>Historial de Transacciones</h2>\n  <button (click)=\"obtenerTransacciones()\" class=\"btn btn-info\">Ver Transacciones</button>\n\n  <table class=\"table mt-3\" *ngIf=\"transacciones.length > 0\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Monto</th>\n        <th>Tipo</th>\n        <th>Fecha</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let transaccion of transacciones\">\n        <td>{{ transaccion.id }}</td>\n        <td>{{ transaccion.monto }}</td>\n        <td>{{ transaccion.tipo }}</td>\n        <td>{{ transaccion.fecha }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}