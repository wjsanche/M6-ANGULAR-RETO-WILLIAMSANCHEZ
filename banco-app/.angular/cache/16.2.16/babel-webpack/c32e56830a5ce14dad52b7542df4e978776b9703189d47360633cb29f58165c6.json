{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cuenta.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"text-success\": a0,\n    \"text-danger\": a1\n  };\n};\nfunction TransaccionesComponent_table_8_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 11);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaccion_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaccion_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", transaccion_r3.monto, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, transaccion_r3.tipo === \"DEP\\u00D3SITO\", transaccion_r3.tipo === \"RETIRO\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", transaccion_r3.tipo, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaccion_r3.fecha);\n  }\n}\nfunction TransaccionesComponent_table_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 8)(1, \"thead\", 9)(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Monto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Fecha\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, TransaccionesComponent_table_8_tr_12_Template, 10, 8, \"tr\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.transacciones);\n  }\n}\nfunction TransaccionesComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \"No hay transacciones registradas.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TransaccionesComponent {\n  constructor(cuentaService) {\n    this.cuentaService = cuentaService;\n    this.cuentaId = 1; // Puedes cambiarlo\n    this.transacciones = [];\n  }\n  obtenerTransacciones() {\n    this.cuentaService.getTransacciones(this.cuentaId).subscribe(data => {\n      this.transacciones = data;\n    }, error => {\n      console.error('Error al obtener transacciones', error);\n    });\n  }\n  static {\n    this.ɵfac = function TransaccionesComponent_Factory(t) {\n      return new (t || TransaccionesComponent)(i0.ɵɵdirectiveInject(i1.CuentaService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TransaccionesComponent,\n      selectors: [[\"app-transacciones\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"card\", \"shadow\"], [1, \"card-body\"], [1, \"text-center\", \"text-info\"], [1, \"text-center\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [\"class\", \"table table-hover mt-3\", 4, \"ngIf\"], [\"class\", \"text-center text-warning mt-3\", 4, \"ngIf\"], [1, \"table\", \"table-hover\", \"mt-3\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"text-center\", \"text-warning\", \"mt-3\"]],\n      template: function TransaccionesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n          i0.ɵɵtext(4, \"Historial de Transacciones\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function TransaccionesComponent_Template_button_click_6_listener() {\n            return ctx.obtenerTransacciones();\n          });\n          i0.ɵɵtext(7, \"Ver Transacciones\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(8, TransaccionesComponent_table_8_Template, 13, 1, \"table\", 6);\n          i0.ɵɵtemplate(9, TransaccionesComponent_p_9_Template, 2, 0, \"p\", 7);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.transacciones.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.transacciones.length === 0);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","transaccion_r3","id","ɵɵtextInterpolate1","monto","ɵɵproperty","ɵɵpureFunction2","_c0","tipo","fecha","ɵɵtemplate","TransaccionesComponent_table_8_tr_12_Template","ctx_r0","transacciones","TransaccionesComponent","constructor","cuentaService","cuentaId","obtenerTransacciones","getTransacciones","subscribe","data","error","console","ɵɵdirectiveInject","i1","CuentaService","selectors","decls","vars","consts","template","TransaccionesComponent_Template","rf","ctx","ɵɵlistener","TransaccionesComponent_Template_button_click_6_listener","TransaccionesComponent_table_8_Template","TransaccionesComponent_p_9_Template","length"],"sources":["C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\transacciones\\transacciones.component.ts","C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\transacciones\\transacciones.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CuentaService } from 'src/app/services/cuenta.service';\n\n@Component({\n  selector: 'app-transacciones',\n  templateUrl: './transacciones.component.html',\n  styleUrls: ['./transacciones.component.css']\n})\nexport class TransaccionesComponent {\n  cuentaId: number = 1; // Puedes cambiarlo\n  transacciones: any[] = [];\n\n  constructor(private cuentaService: CuentaService) {}\n\n  obtenerTransacciones() {\n    this.cuentaService.getTransacciones(this.cuentaId).subscribe(\n      (data) => {\n        this.transacciones = data;\n      },\n      (error) => {\n        console.error('Error al obtener transacciones', error);\n      }\n    );\n  }\n}\n","<div class=\"container mt-4\">\n  <div class=\"card shadow\">\n    <div class=\"card-body\">\n      <h2 class=\"text-center text-info\">Historial de Transacciones</h2>\n\n      <div class=\"text-center\">\n        <button (click)=\"obtenerTransacciones()\" class=\"btn btn-info\">Ver Transacciones</button>\n      </div>\n\n      <table class=\"table table-hover mt-3\" *ngIf=\"transacciones.length > 0\">\n        <thead class=\"table-dark\">\n          <tr>\n            <th>ID</th>\n            <th>Monto</th>\n            <th>Tipo</th>\n            <th>Fecha</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let transaccion of transacciones\">\n            <td>{{ transaccion.id }}</td>\n            <td>${{ transaccion.monto }}</td>\n            <td>\n              <span [ngClass]=\"{'text-success': transaccion.tipo === 'DEPÓSITO', 'text-danger': transaccion.tipo === 'RETIRO'}\">\n                {{ transaccion.tipo }}\n              </span>\n            </td>\n            <td>{{ transaccion.fecha }}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <p *ngIf=\"transacciones.length === 0\" class=\"text-center text-warning mt-3\">No hay transacciones registradas.</p>\n    </div>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}