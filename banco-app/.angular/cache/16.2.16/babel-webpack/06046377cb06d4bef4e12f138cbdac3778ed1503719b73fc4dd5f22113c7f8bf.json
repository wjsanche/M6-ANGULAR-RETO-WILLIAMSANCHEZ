{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cuenta.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CuentaComponent {\n  constructor(cuentaService) {\n    this.cuentaService = cuentaService;\n    this.cuentaId = 2; // Puedes cambiarlo seg√∫n el ID de prueba\n    this.saldo = 0;\n    this.monto = 0;\n    this.mensaje = '';\n  }\n  obtenerSaldo() {\n    if (!this.cuentaId || this.cuentaId <= 0) {\n      this.mensaje = 'Ingrese un ID de cuenta v√°lido.';\n      return;\n    }\n    this.cuentaService.getSaldo(this.cuentaId).subscribe({\n      next: saldo => {\n        console.log('Respuesta de la API:', response); // üìå Verifica la respuesta en la consola\n        this.saldo = response; // ‚ö† Aqu√≠ ajustaremos dependiendo de la estructura de la API\n        this.mensaje = 'Saldo obtenido correctamente.';\n      },\n      error: error => {\n        console.error('Error al obtener saldo:', error);\n        this.mensaje = 'Error al consultar saldo. Verifique el ID de la cuenta.';\n      }\n    });\n  }\n  depositar() {\n    this.cuentaService.depositar(this.cuentaId, this.monto).subscribe(() => {\n      this.mensaje = `Dep√≥sito de $${this.monto} realizado con √©xito.`;\n      this.obtenerSaldo();\n    }, error => {\n      this.mensaje = 'Error al realizar el dep√≥sito';\n      console.error(error);\n    });\n  }\n  retirar() {\n    this.cuentaService.retirar(this.cuentaId, this.monto).subscribe(() => {\n      this.mensaje = `Retiro de $${this.monto} realizado con √©xito.`;\n      this.obtenerSaldo();\n    }, error => {\n      this.mensaje = 'Error al realizar el retiro';\n      console.error(error);\n    });\n  }\n  static {\n    this.…µfac = function CuentaComponent_Factory(t) {\n      return new (t || CuentaComponent)(i0.…µ…µdirectiveInject(i1.CuentaService));\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: CuentaComponent,\n      selectors: [[\"app-cuenta\"]],\n      decls: 19,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"mt-3\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", \"mt-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"mt-2\", 3, \"click\"], [1, \"mt-3\", \"text-info\"]],\n      template: function CuentaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.…µ…µtext(2, \"Gesti\\u00F3n de Cuenta\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(3, \"p\")(4, \"strong\");\n          i0.…µ…µtext(5, \"Saldo actual:\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µtext(6);\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(7, \"button\", 1);\n          i0.…µ…µlistener(\"click\", function CuentaComponent_Template_button_click_7_listener() {\n            return ctx.obtenerSaldo();\n          });\n          i0.…µ…µtext(8, \"Consultar Saldo\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(9, \"div\", 2)(10, \"label\");\n          i0.…µ…µtext(11, \"Monto:\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(12, \"input\", 3);\n          i0.…µ…µlistener(\"ngModelChange\", function CuentaComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.monto = $event;\n          });\n          i0.…µ…µelementEnd()();\n          i0.…µ…µelementStart(13, \"button\", 4);\n          i0.…µ…µlistener(\"click\", function CuentaComponent_Template_button_click_13_listener() {\n            return ctx.depositar();\n          });\n          i0.…µ…µtext(14, \"Depositar\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(15, \"button\", 5);\n          i0.…µ…µlistener(\"click\", function CuentaComponent_Template_button_click_15_listener() {\n            return ctx.retirar();\n          });\n          i0.…µ…µtext(16, \"Retirar\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(17, \"p\", 6);\n          i0.…µ…µtext(18);\n          i0.…µ…µelementEnd()();\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance(6);\n          i0.…µ…µtextInterpolate1(\" $\", ctx.saldo, \"\");\n          i0.…µ…µadvance(6);\n          i0.…µ…µproperty(\"ngModel\", ctx.monto);\n          i0.…µ…µadvance(6);\n          i0.…µ…µtextInterpolate(ctx.mensaje);\n        }\n      },\n      dependencies: [i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CuentaComponent","constructor","cuentaService","cuentaId","saldo","monto","mensaje","obtenerSaldo","getSaldo","subscribe","next","console","log","response","error","depositar","retirar","i0","…µ…µdirectiveInject","i1","CuentaService","selectors","decls","vars","consts","template","CuentaComponent_Template","rf","ctx","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µlistener","CuentaComponent_Template_button_click_7_listener","CuentaComponent_Template_input_ngModelChange_12_listener","$event","CuentaComponent_Template_button_click_13_listener","CuentaComponent_Template_button_click_15_listener","…µ…µadvance","…µ…µtextInterpolate1","…µ…µproperty","…µ…µtextInterpolate"],"sources":["C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\cuenta\\cuenta.component.ts","C:\\Users\\FESAD UPTC\\Documents\\banco-app\\src\\app\\components\\cuenta\\cuenta.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CuentaService } from 'src/app/services/cuenta.service';\n\n@Component({\n  selector: 'app-cuenta',\n  templateUrl: './cuenta.component.html',\n  styleUrls: ['./cuenta.component.css']\n})\nexport class CuentaComponent {\n  cuentaId: number = 2; // Puedes cambiarlo seg√∫n el ID de prueba\n  saldo: number = 0;\n  monto: number = 0;\n  mensaje: string = '';\n\n  constructor(private cuentaService: CuentaService) {}\n\n  obtenerSaldo() {\n    if (!this.cuentaId || this.cuentaId <= 0) {\n      this.mensaje = 'Ingrese un ID de cuenta v√°lido.';\n      return;\n    }\n  \n    this.cuentaService.getSaldo(this.cuentaId).subscribe({\n      next: (saldo) => {\n      console.log('Respuesta de la API:', response); // üìå Verifica la respuesta en la consola\n      this.saldo = response; // ‚ö† Aqu√≠ ajustaremos dependiendo de la estructura de la API\n      this.mensaje = 'Saldo obtenido correctamente.';\n      },\n      error: (error) => {\n        console.error('Error al obtener saldo:', error);\n        this.mensaje = 'Error al consultar saldo. Verifique el ID de la cuenta.';\n      }\n    });\n  }\n\n  depositar() {\n    this.cuentaService.depositar(this.cuentaId, this.monto).subscribe(\n      () => {\n        this.mensaje = `Dep√≥sito de $${this.monto} realizado con √©xito.`;\n        this.obtenerSaldo();\n      },\n      (error) => {\n        this.mensaje = 'Error al realizar el dep√≥sito';\n        console.error(error);\n      }\n    );\n  }\n\n  retirar() {\n    this.cuentaService.retirar(this.cuentaId, this.monto).subscribe(\n      () => {\n        this.mensaje = `Retiro de $${this.monto} realizado con √©xito.`;\n        this.obtenerSaldo();\n      },\n      (error) => {\n        this.mensaje = 'Error al realizar el retiro';\n        console.error(error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h2>Gesti√≥n de Cuenta</h2>\n  <p><strong>Saldo actual:</strong> ${{ saldo }}</p>\n\n  <button (click)=\"obtenerSaldo()\" class=\"btn btn-primary\">Consultar Saldo</button>\n\n  <div class=\"mt-3\">\n    <label>Monto:</label>\n    <input type=\"number\" [(ngModel)]=\"monto\" class=\"form-control\">\n  </div>\n\n  <button (click)=\"depositar()\" class=\"btn btn-success mt-2\">Depositar</button>\n  <button (click)=\"retirar()\" class=\"btn btn-danger mt-2\">Retirar</button>\n\n  <p class=\"mt-3 text-info\">{{ mensaje }}</p>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}